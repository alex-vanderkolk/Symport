describe GenericRecordErrorsSerializer do
  subject { described_class }

  describe '.validation_errors' do
    it 'serializes the errors generated by active record for project' do
      project = Project.new
      project.errors[:name] << "can't be blank!"
      serialized_errors = subject.validation_errors(project)
      serialized_errors.should == { "name" => ["can't be blank!"] }
    end

    it 'serializes the errors generated by active record for form structure' do
      project = Project.create
      structure = FormStructure.new project_id: project.id
      structure.errors[:name] << "can't be blank!"
      serialized_errors = subject.validation_errors(structure)
      serialized_errors.should == { "name" => ["can't be blank!"] }
    end

    it "converts stuff to camel case" do
      user = User.new email: "nothing@andnowhere.com", password: "fancy stuff"

      user.errors[:password_confirmation] << "oh no"

      serialized_errors = subject.validation_errors(user)

      serialized_errors.should == {"passwordConfirmation" => ["oh no"]}
    end
  end
end